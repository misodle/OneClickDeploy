<context>
CommandHandler 
</context>
<mode>
WAM 
</mode>
<caption>
Basic Command Handler
</caption>
<preamble>
ENG_vf_um052_Handler_Outline_WAM.htm
</preamble>
<hint>
This assistant produces the code for a basic command handler.   
</hint>
<sequence>
000100  
</sequence>
<handler>
VF_UM055 
VF_UM057     
VF_UM056   
</handler>
<handlertxt>
Specify the identification protocol you have decided to use for this business object. If a physical file resembles this business object specify its name and the assistant will attempt to automatically deduce a basic identification protocol for you.    
Specify fields that you want onto the top (header) area and/or bottom (list) area of your command handler panel. Your choice to put fields onto the header and/or list areas will affect the way that code assistant structures your command execution logic.                  
Specify the things that you would like to include in the generated code.     
</handlertxt>
<code>
<<include VF_UM052_CommandHandler_Preamble.vfi>>
BEGIN_COM ROLE(*EXTENDS #PRIM_WAM) Sessionstatus(None) Layoutweblet('vlf_layout_v2')
Define_Com Class(#vf_sw100) NAME(#avFrameworkManager)
Define_Com Class(#vf_aw010) Name(#ThisHandler) Reference(*Dynamic)
Define_Com Class(#vf_lw002) Name(#avListManager) Reference(*Dynamic)
Define_Com Class(#fp_in001) Name(#FastPart) Reference(*Dynamic)
<<comment>>VL Framework map fields. DO NOT CHANGE.
Web_Map For(*both) Fields((#VF_FRAMEI *private) (#VF_FRAMEW *private) (#VF_FRAMES *private) (#VF_ELXTOF *private) (#VF_ELXN01 *private) (#VF_ELXN02 *private) (#VF_ELXN03 *private) (#VF_ELXN04 *private) (#VF_ELXN05 *private) (#VF_ELXN06 *private) 
+ (#VF_ELXN07 *private) (#VF_ELXN08 *private) (#VF_ELXN09 *private) (#VF_ELXN10 *private) (#VF_ELXA01 *private) (#VF_ELXA02 *private) (#VF_ELXA03 *private) (#VF_ELXA04 *private) (#VF_ELXA05 *private) 
+ (#VF_ELXA06 *private) (#VF_ELXA07 *private) (#VF_ELXA08 *private) (#VF_ELXA09 *private) (#VF_ELXA10 *private)(#VF_ELMETA *private))
<<comment>>Map fields used in this form.
<<if UM057_Has_HEADFields>>
Group_by Name(#WAM_HEAD) Fields(<<UM057_GenHeadGroupInline>>
<<endif>>
<<if UM057_Has_LISTFields>> 
<<comment>>Define the list to appear on the web form
Def_list Name(#WAM_LIST) type(*working) Fields(<<UM057_GenListGroupInline>> 
<<if CA_UM056_SAVEBTN>>
Web_Map For(*both) Fields((#UB_SAVE *NOID) #WAM_LIST<<UM057_GenHeadGroupInline>>
<<else>>
Web_Map For(*both) Fields(#WAM_LIST<<UM057_GenHeadGroupInline>>
<<endif>>
<<else>>
<<if CA_UM056_SAVEBTN>>
Web_Map For(*both) Fields((#UB_SAVE *noid) <<UM057_GenHeadGroupInline>>
<<endif>>
<<endif>>
Webroutine Name(UHandleEvent)
<<if CA_UM056_SAVEBTN>>
<<comment>>Register the event that will execute when clicking on the Save button in this filter as wam event number 1.
#avFrameworkManager.avRegisterEvent Named(UB_SAVE.CLICK) Signalaswamevent(1)
<<endif>>
<<comment>>Standard WAM initialisation. 
#avFrameworkManager.avInitializeWAM Type(COMMAND) Invoker(#com_owner) Listmanager(#avListManager) Handlermanager(#ThisHandler) Fastpartmanager(#FastPart)
#avFrameworkManager.avHandleWAMEvent Anchorblock(#vf_framew) Event(#vf_event) Designmode(#vf_framed) Skin(#VF_Frames) Metatag(#vf_elmeta) 
+ Tof(#vf_elxtof) N01(#vf_elxn01) N02(#vf_elxn02) N03(#vf_elxn03) N04(#vf_elxn04) N05(#vf_elxn05) N06(#vf_elxn06) N07(#vf_elxn07) N08(#vf_elxn08) 
+ N09(#vf_elxn09) N10(#vf_elxn10) A01(#vf_elxA01) A02(#vf_elxA02) A03(#vf_elxA03) A04(#vf_elxA04) A05(#vf_elxA05) A06(#vf_elxA06) A07(#vf_elxA07) A08(#vf_elxA08) A09(#vf_elxA09) A10(#vf_elxA10) Ssiname(#VF_FRAMEI)
Endroutine
<<comment>>Initialize the command handler
Evtroutine Handling(#avFrameworkManager.uInitialize) Options(*noclearmessages *noclearerrors)
<<UM055_GenGetLst>>
Endroutine
<<CommentBlock>>
Evtroutine Handling(#avFrameworkManager.uexecute) Options(*noclearmessages *noclearerrors)
<<CommentBlock>>
<<Comment>>The return code field and testing condition
Define #Ret_Code reffld(#STD_BOOL)
Def_cond Name(*RetOkay) Cond('(#Ret_Code = OK) *OR (#Ret_Code = TRUE)')
<<if UM057_Has_HEADFields>>
<<comment>>Fetch information from the main file to fill in the header fields on the form 
Fetch Fields(#WAM_HEAD) From_File(<<UM055_BaseFile>>) With_Key(<<UM055_BaseFileKeys>>) 
<<Comment>>??? Addition logic may be required here ???
<<if UM057_Has_LISTFields>>
<<comment>>Clear the browse list 
Clr_List #WAM_LIST
<<comment>>Select information from any other associated file(s) to fill the visible list 
Select Fields(#WAM_LIST) From_File(<<tba>>) With_key(<<tba>>)
<<Comment>>??? Addition logic may be required here ???
<<Comment>>Add an entry to the visible list
Add_Entry #WAM_LIST
EndSelect    
<<endif>>
<<else>>
<<if UM057_Has_LISTFields>>
<<comment>>Clear the list 
Clr_List #WAM_LIST   
<<UM055_GenGetSel FIRST Ret_Code>>
DoWhile *RetOkay
Fetch Fields(#WAM_LIST) From_File(<<UM055_BaseFile>>) With_Key(<<UM055_BaseFileKeys>>) 
<<Comment>>??? Addition logic may be required here ???
<<Comment>>Add an entry to the visible list
Add_Entry #Main_List
<<UM055_GenGetSel NEXT Ret_Code>>
EndWhile
<<endif>>
<<endif>>
Endroutine
<<if CA_UM056_SAVEBTN>>
<<CommentBlock>>
* Perform Save event logic. Event routine registered using #avFrameworkManager.avRegisterEvent as event 1.
Evtroutine Handling(#avFrameworkManager.uWAMEvent_1) Options(*noclearmessages *noclearerrors)
<<CommentBlock>>
* <your save logic goes here> 
* <your save logic goes here> 
* <your save logic goes here> 
<<CommentBlock>>
Endroutine
<<endif>> 
End_Com
</code>