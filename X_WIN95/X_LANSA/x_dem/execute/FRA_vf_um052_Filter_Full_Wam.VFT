<?xml version="1.0" encoding="Windows-1252"?>
<caption>  
Critère de recherche à partir d'un fichier ou d'une vue      
</caption>
<context>
Filter 
</context>
<preamble>
FRA_vf_um052_Filter_Full_Wam.htm
</preamble>
<mode>
WAM
</mode>
<sequence>
000100  
</sequence>
<handler>
VF_UM055 
VF_UM058    
</handler>
<handlertxt>
Préciser le protocole d'identification choisi pour cet objet métier. Si un fichier physique ressemble à cet objet métier préciser son nom et l'assistant essaiera de déduire un protocole d'identification de base pour vous.    
Préciser le fichier physique qui supportera la recherche pour ce critère de recherche. 
</handlertxt>
<hint>
L'assistant produit le code pour un filtre qui nécessite peu ou pas de modifications manuelles à partir du fichier ou de la vue précisée. Il est conçu pour les développeurs qui sont ne nouveaux utilisateurs du VL Framework.
</hint>
<code>
<<include VF_UM052_Filter_Preamble.vfi>>
BEGIN_COM ROLE(*EXTENDS £PRIM_WAM) Layoutweblet('vlf_layout_v2') Sessionstatus(None)
<<comment>>Déclarations standard pour un filtre
Define_Com CLASS(£vf_sw100) NAME(£avFrameworkManager)
Define_Com Class(£vf_aw007) Name(£ThisFilter) Reference(*Dynamic)
Define_Com Class(£vf_lw002) Name(£avListManager) Reference(*Dynamic)
Define_Com Class(£fp_in001) Name(£FastPart) Reference(*Dynamic)
<<comment>>Zones de mappage du Framework VL. NE PAS MODIFIER.
Web_Map For(*both) Fields((£VF_FRAMEI *private) (£VF_FRAMEW *private) (£VF_FRAMES *private) (£VF_ELXTOF *private) (£VF_ELXN01 *private) (£VF_ELXN02 *private) (£VF_ELXN03 *private) (£VF_ELXN04 *private) (£VF_ELXN05 *private) (£VF_ELXN06 *private) 
+ (£VF_ELXN07 *private) (£VF_ELXN08 *private) (£VF_ELXN09 *private) (£VF_ELXN10 *private) (£VF_ELXA01 *private) (£VF_ELXA02 *private) (£VF_ELXA03 *private) (£VF_ELXA04 *private) (£VF_ELXA05 *private) (£VF_ELXA06 *private) (£VF_ELXA07 *private) 
+ (£VF_ELXA08 *private) (£VF_ELXA09 *private) (£VF_ELXA10 *private) (£VF_ELMETA *private))

<<comment>>Définitions de zones simples, groupes et conditions
Group_By   Name(£XG_Keys)    Fields(<<UM058_KeyList>>)
Group_By   Name(£XG_Ident)   Fields(<<UM055_GenFldList>>)
Def_List   Name(£Save_Keys)  Fields(£XG_Keys) Type(*Working) Entrys(1)
Def_Cond   Name(*SearchOK)   <<UM058_SearchCondition>> 

<<comment>>Mappage des zones utilisées dans ce formulaire.
Web_Map For(*both) Fields(£XG_Keys (£UB_SEARCH *Noid))
<<comment>>Routine Web standard utilisée par tous les filtres WAM du VLF et les gestionnaires d'actions. NE PAS MODIFIER le nom de la routine Web. Utiliser cette routine pour enregistrer les événements WAM.
Webroutine Name(UHandleEvent)
<<comment>>Enregistre l'évènement qui s'exécutera suite à un clic sur le bouton Rechercher de ce filtre comme évènement wam numéro 1.
£avFrameworkManager.avRegisterEvent Named(UB_SEARCH.CLICK) Signalaswamevent(1)
<<comment>>Initialisation standard du WAM. 
£avFrameworkManager.avInitializeWAM Type(FILTER) Invoker(£com_owner) Listmanager(£avListManager) Filtermanager(£ThisFilter) Fastpartmanager(£FastPart)
£avFrameworkManager.avHandleWAMEvent Anchorblock(£vf_framew) Event(£vf_event) Designmode(£vf_framed) Skin(£VF_Frames) Metatag(£vf_elmeta) Tof(£vf_elxtof) N01(£vf_elxn01) N02(£vf_elxn02) N03(£vf_elxn03) N04(£vf_elxn04) N05(£vf_elxn05) 
+ N06(£vf_elxn06) N07(£vf_elxn07) N08(£vf_elxn08) N09(£vf_elxn09) 
+ N10(£vf_elxn10) A01(£vf_elxA01) A02(£vf_elxA02) A03(£vf_elxA03) A04(£vf_elxA04) A05(£vf_elxA05) A06(£vf_elxA06) A07(£vf_elxA07) A08(£vf_elxA08) A09(£vf_elxA09) A10(£vf_elxA10) Ssiname(£VF_FRAMEI)
Endroutine
<<Comment>>Gère le clic du bouton de recherche enregistré comme evenement wam 1
Evtroutine Handling(£avFrameworkManager.uExecute) Options(*noclearmessages *noclearerrors)
<<if CA_UM058_REMEMBERKEYS>>
<<comment>>Restaurer les données utilisées dans les exécutions précédentes du filtre
<<UM058_Repeat False Alpha >>£avFrameworkManager.avRestoreValue Withid1(*Component) Withid2('<<field>>') ToAvalue(£<<field>>) Useavaluedefault(*Blanks)
<<UM058_Repeat False Numeric >>£avFrameworkManager.avRestoreValue Withid1(*Component) Withid2('<<field>>') Usenvaluedefault(0) ToNvalue(£VF_ELNUMX)<<split>>£<<field>> := £VF_ELNUMX<<field_intrinsic_to>> 
<<endif>>
Endroutine

<<Comment>>Gère le clic du bouton de recherche enregistré comme evenement wam 1
Evtroutine Handling(£avFrameworkManager.uWAMEvent_1) Options(*noclearmessages *noclearerrors)
<<comment>> Si les clés de recherche sont valides  
if (*SearchOK)  
<<if CA_UM058_REMEMBERKEYS>>
<<comment>>Enregistrer les valeurs de clé pour exécution ultérieure
<<UM058_Repeat False Alpha >>£avFrameworkManager.avSaveValue Withid1(*Component) Withid2('<<field>>') FromAvalue(£<<field>>)
<<UM058_Repeat False Numeric >>£avFrameworkManager.avSaveValue Withid1(*Component) Withid2('<<field>>') FromNvalue(£<<field>><<field_intrinsic_from>>)
<<endif>>
<<comment>>Enregistrer les valeurs en cours des clés  
Inz_List £Save_Keys 1 
<<comment>>Indique que la mise à jour de la liste d'instance de <<businessobject_lang ucaption>> va commencer
£avListManager.BeginListUpdate
<<if CA_UM058_CLEARLIST>>
<<comment>>Vider le contenu de la liste d'instance en cours
£avListManager.ClearList
<<endif>>
<<Comment>> Choisir les instances adéquates
<<if CA_UM058_LIMITSEARCH>>
£ListCount := 0
<<endif>>
<<if CA_UM058_ALLOWGENERIC>>
<<if CA_UM058_FULLKEY>>
Select Fields(£XG_Ident) From_File(<<UM058_ViewName>>) With_key(£XG_Keys) Generic(*yes) Nbr_keys(*WithKey)  
<<else>>
Select Fields(£XG_Ident) From_File(<<UM058_ViewName>>) With_key(£XG_Keys) Generic(*yes) Nbr_Keys(*Compute)  
<<endif>>  
<<else>>
<<if CA_UM058_FULLKEY>>
Select Fields(£XG_Ident) From_File(<<UM058_ViewName>>) With_key(£XG_Keys) Nbr_keys(*WithKey)  
<<else>>
Select Fields(£XG_Ident) From_File(<<UM058_ViewName>>) With_key(£XG_Keys) Nbr_Keys(*Compute)  
<<endif>>
<<endif>>
<<if CA_UM058_LIMITSEARCH>>
* Arrêter la recherche après 200 instances
£ListCount += 1
If (£ListCount > 200)
Message 'Recherche arrêtée après avoir trouvé 200 instances. Affinez votre recherche.'
£ThisFilter.avShowMessages := TRUE
Leave     
Endif
<<endif>>
<<UM055_AddtoList>>  
EndSelect
<<comment>>Mise à jour de la liste d'instances terminée
£avListManager.EndListUpdate
<<comment>>Restaure les valeurs de clé sauvegardées 
Get_Entry 1 £Save_Keys 
else
<<comment>> sinon si la clé de recherche est invalide envoyer un message
Message 'La recherche demandée est incorrecte. Entrer les informations de recherche'
£ThisFilter.avShowMessages := TRUE
Endif
Endroutine
End_Com
</code>
