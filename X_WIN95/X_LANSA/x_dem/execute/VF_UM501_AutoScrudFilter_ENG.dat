* ---------------------------------------------------------------------------------------------------
* This is a hidden filter in framework <<FRAMEWORK>>.
* It belongs to business object <<BUSINESS_OBJECT_CAPTION>>.
* It was created on <<CREATEDDATE>> by <<CREATEDUSER>>.
* This diagram indicates how and where it is used: <<COND_AUTOSCRUD>>
* Annotate Img=%partdir%VF_UM501_AutoScrud_Slide1.PNG width=1000 height=563 <<COND_AUTOSCRUD>>
* Note: If you can’t see the diagram, go to the Home tab, then move across into the Design area. <<COND_AUTOSCRUD>>
*       Click on the bottom right image that has the hint “Toggle Annotation Enabled/Disabled state”. <<COND_AUTOSCRUD>>
* ---------------------------------------------------------------------------------------------------
Begin_Com Role(*EXTENDS #vf_ac007O) Height(270) Width(500)
* The columns returned from the server to include into the instance list
Group_By Name(#XG_InstanceListColumns) Fields(<<EXPAND_INSTANCELISTNAMES>>)
* ---------------------------------------------------------------------------------
Define_Com Class(#vf_lm002O) Name(#LocalListManagerReference) Reference(*DYNAMIC)
* ---------------------------------------------------------------------------------
Mthroutine Name(uTerminate) Options(*REDEFINE)
* Clean up stored references 
#LocalListManagerReference <= *null
* Do the ancestor thing
#COM_ANCESTOR.uTerminate
Endroutine
* ---------------------------------------------------------------------------------
Mthroutine Name(uInitialize) Options(*REDEFINE)
* Do the ancestor thing
#COM_ANCESTOR.uInitialize
* Make this a hidden filter and change the clear list button caption to show "Refresh" instead
#COM_Self.avFilterLocation := NONE
#COM_Self.avChangeClearListButtonCaption To(*MTXTUF_REFRESH_LIST)
#LocalListManagerReference <= #COM_OWNER.avListManager
* Initiate an async Operation to load all data
#Com_Owner.avQueueAsyncOperation Operationid(LoadAllData) Busystatetext("Loading all <<BUSINESS_OBJECT_CAPTION>>")
Endroutine
* ---------------------------------------------------------------------------------
Evtroutine Handling(#LocalListManagerReference.ListCleared) Fromclearlistbutton(#Fromclearlistbutton)
* Queue a reload operation - but only if the request came from the button and nothing is already queued or processing processing
If (#Fromclearlistbutton) 
#Com_Owner.avQueueAsyncOperation Operationid(LoadAllData) Busystatetext("Reloading all <<BUSINESS_OBJECT_CAPTION>>") Onlyifnothingelsepending(True)
Endif 
Endroutine
* ---------------------------------------------------------------------------------
Mthroutine Name(avExecuteAsyncOperation) Options(*REDEFINE)
* Definitions
Define_Com Class(#prim_boln) Name(#ServerModuleResult)
Def_List Name(#InstanceList_Columns) Fields(#XG_InstanceListColumns) Type(*Working) Entrys(*MAX)
Define_Com Class(<<SERVER_MODULE>>.LoadInstanceListData) Name(#LoadInstanceListData)
* Handle the various async Operations that this program
Case (#OperationID)
* -----------
* LoadAllData
When (= LoadAllData)
* Load all details from the server
* Annotate Img=%partdir%VF_UM501_AutoScrud_Slide4.PNG width=1000 height=339 <<COND_AUTOSCRUD>>
#LoadInstanceListData.Execute Instancelist_Columns(#InstanceList_Columns) Servermoduleresult(#ServerModuleResult)
* Clear and (re)load the client side instance list returned from from the server
#AVLISTMANAGER.ClearList
Selectlist Named(#InstanceList_Columns)
#AVLISTMANAGER.AddtoList <<EXPAND_ADDTOLIST>>
Endselect
* Clear the instance list that was returned as it is no longer required
Clr_List Named(#InstanceList_Columns)
* Clear any server issued messages after the theme defined delay
#ClearMessagesAfterDelay := True
Endcase
Endroutine
End_Com
