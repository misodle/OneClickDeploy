<caption>
Filter and Instance List    
</caption>
<context>
Filter 
</context>
<preamble>
ENG_vf_um052_Filter_Full.htm
</preamble>
<sequence>
000100  
</sequence>
<handlertxt>
Specify the physical file that your business object is to be based on.  Then choose which fields to show on the instance list and which field / fields uniquely identify a record.
Specify the physical file that will underpin the search made by this filter. Then select the required view, keys and search options as they appear.
Choose any other options you may want. 
</handlertxt>
<handler>
VF_UM128 
VF_UM058    
VF_UM109 
</handler>
<hint>
This assistant produces the code for a filter that requires little or no manual completion based on a specified file or view. It is designed for developers who are new to the VL Framework.
</hint>
<code>
<<include VF_UM052_Filter_Preamble.vfi>>
Function Options(*DIRECT)
Begin_Com Role(*EXTENDS #VF_AC007) Height(182) Width(326) LayoutManager(#MAIN_LAYOUT)
* <<majorsep>>
* Simple Field, Group and Condition Definitions
* <<majorsep>>
Group_By   Name(#XG_Keys)    Fields(<<UM058_KeyList>>)
Group_By   Name(#XG_Ident)   Fields(<<UM055_GenFldList>>)
Def_List   Name(#Save_Keys)   Fields(#XG_Keys) Type(*Working) Entrys(1)
Def_Cond   Name(*SearchOK)   <<UM058_SearchCondition>> 
<<if CA_UM109_CHK_CONNECT>>
define field(#con_rslt) type(*char) length(2)
Def_Cond Name(*conresult) Cond(#con_rslt = OK)
<<endif>> 
* <<majorsep>>
* Component definitions
* <<majorsep>>
<<Comment>>Body and Button arrangement panels 
Define_Com Class(#PRIM_PANL) Name(#BODY_PANEL) Displayposition(1) Height(182) Layoutmanager(#BODY_FLOW) Left(0) Parent(#COM_OWNER) Tabposition(1) Tabstop(False) Top(0) Width(246) Horizontalscroll(True) Verticalscroll(True)
Define_Com Class(#PRIM_PANL) Name(#BUTTON_PANEL) Displayposition(2) Height(182) Layoutmanager(#BUTTON_FLOW) Left(246) Parent(#COM_OWNER) Tabposition(2) Tabstop(False) Top(0) Width(88)
<<Comment>>Attachment and flow layout managers
Define_Com Class(#PRIM_ATLM) Name(#MAIN_LAYOUT)
Define_Com Class(#PRIM_ATLI) Name(#BODY_ATTACH)   Attachment(Center) Manage(#BODY_PANEL) Parent(#MAIN_LAYOUT)  
Define_Com Class(#PRIM_ATLI) Name(#BUTTON_ATTACH) Attachment(Right)  Manage(#BUTTON_PANEL) Parent(#MAIN_LAYOUT)
Define_Com Class(#PRIM_FWLM) Name(#BUTTON_FLOW) Direction(TopToBottom) Flowoperation(Center) Marginbottom(4) Marginleft(4) Marginright(4) Margintop(4) Spacing(4) Spacingitems(4)
Define_Com Class(#PRIM_FWLM) Name(#BODY_FLOW) Direction(TopToBottom) Marginbottom(4) Marginleft(4) Marginright(4) Margintop(4) Spacing(4) Spacingitems(4)  Sizingrulehor(Maximize)
Define_Com class(#PRIM_PHBN) Name(#Search_Button) Buttondefault(True) Caption('Search') Parent(#BUTTON_PANEL)
Define_Com Class(#PRIM_FWLI) Name(#FWLI_Search_Button) Manage(#Search_Button) Parent(#BUTTON_FLOW)
<<Comment>>Define the fields and components that are on the filter form
<<UM058_Repeat True>>Define_Com Class(#<<field>>.Visual) Parent(#BODY_PANEL)
<<UM058_Repeat False>>Define_Com Class(#PRIM_FWLI) Name(#FWLI_<<Field>>) Manage(#<<field>>) Parent(#BODY_FLOW)
<<if CA_UM058_CLEARLIST>>
Define_Com Class(#PRIM_CKBX) Name(#CLEAR_LIST) Caption('Clear List') Parent(#BODY_PANEL) DisplayPosition(1)
Define_Com Class(#PRIM_FWLI) Name(#FWLI_CLEAR_LIST) Manage(#CLEAR_LIST) Parent(#BODY_FLOW)
<<endif>>
* <<majorsep>>
* Method Definitions
* <<majorsep>>
<<CommentBlock>>
Mthroutine Name(uInitialize) Options(*Redefine) 
<<if CA_UM058_REMEMBERKEYS>>
<<comment>>Restore values used in previous executions of this filter
<<UM058_Repeat False Alpha_NU  >>#avFrameworkManager.avRestoreValue WithID1(*Component) WithID2(#<<field>>.Name) ToAValue(#<<field>>)    
<<UM058_Repeat False Alpha_U  >>#avFrameworkManager.avRestoreValue WithID1(*Component) WithID2(#<<field>>.Name) ToAValueU(#<<field>>)   
<<UM058_Repeat False Numeric>>#avFrameworkManager.avRestoreValue WithID1(*Component) WithID2(#<<field>>.Name) ToNValue(#VF_ELNUMX)<<split>>#<<field>> := #VF_ELNUMX<<field_intrinsic_to>>    
<<if CA_UM058_CLEARLIST>>
#avFrameworkManager.avRestoreValue WithID1(*Component) WithID2(#CLEAR_LIST.Name) ToAValue(#CLEAR_LIST.ButtonState) UseAValueDefault(Checked)
<<endif>>
<<endif>>
<<comment>>Enable/disable the search button as appropriate
Set #Search_Button Enabled(*SearchOK)
<<CommentBlock>>
Endroutine


<<CommentBlock>>
Mthroutine Name(uSelectData)  

<<if CA_UM058_REMEMBERKEYS>>
<<comment>>Save values for subsequent executions of this filter
<<UM058_Repeat False Alpha_NU  >>#avFrameworkManager.avSaveValue WithID1(*Component) WithID2(#<<field>>.Name) FromAValue(#<<field>>)
<<UM058_Repeat False Alpha_U  >>#avFrameworkManager.avSaveValue WithID1(*Component) WithID2(#<<field>>.Name) FromAValueU(#<<field>>)
<<UM058_Repeat False Numeric>>#avFrameworkManager.avSaveValue WithID1(*Component) WithID2(#<<field>>.Name) FromNValue(#<<field>><<field_intrinsic_from>>)   
<<if CA_UM058_CLEARLIST>>
#avFrameworkManager.avSaveValue WithID1(*Component) WithID2(#CLEAR_LIST.Name) FromAValue(#CLEAR_LIST.ButtonState)
<<endif>>
<<endif>>
<<comment>>Save the current key values from overwrites done by the select loop 
Inz_List #Save_Keys 1 
<<if CA_UM109_CHK_CONNECT>>
<<comment>>Check that the connection is still live 
#avFrameworkManager.avCheckConnection ReturnValue(#con_rslt)
If Cond(*conresult)
<<endif>> 
<<comment>>Indicate that <<businessobject_lang ucaption>> instance list updating is about to start
#avListManager.BeginListUpdate
<<if CA_UM058_CLEARLIST>>
<<comment>>Clear the current <<businessobject_lang ucaption>> business object instance list
If cond(#Clear_List.ButtonState = Checked)
#avListManager.ClearList
Endif 
<<else>>
<<comment>>Clear the current <<businessobject_lang ucaption>> business object instance list
#avListManager.ClearList
<<endif>>
<<Comment>> Select appropriate instances of <<businessobject_lang ucaption>> 
<<if CA_UM058_ALLOWGENERIC>>
<<if CA_UM058_FULLKEY>>
Select Fields(#XG_Ident) From_File(<<UM058_ViewName>>) With_key(#XG_Keys) Generic(*yes) Nbr_keys(*WithKey)  
<<else>>
Select Fields(#XG_Ident) From_File(<<UM058_ViewName>>) With_key(#XG_Keys) Generic(*yes) Nbr_Keys(*Compute)  
<<endif>>  
<<else>>
<<if CA_UM058_FULLKEY>>
Select Fields(#XG_Ident) From_File(<<UM058_ViewName>>) With_key(#XG_Keys) Nbr_keys(*WithKey)  
<<else>>
Select Fields(#XG_Ident) From_File(<<UM058_ViewName>>) With_key(#XG_Keys) Nbr_Keys(*Compute)  
<<endif>>
<<endif>>
<<UM055_AddtoList>>  

EndSelect
<<comment>>Indicate that <<businessobject_lang ucaption>> instance list updating is now complete
#avListManager.EndListUpdate
<<if CA_UM109_CHK_CONNECT>>
endif
<<endif>> 
<<comment>>Restore the saved key values 
Get_Entry 1 #Save_Keys 
<<comment>> 


endroutine

<<CommentBlock>>
* <<majorsep>>

* Subroutines
* <<majorsep>>
<<CommentBlock>>
* <<majorsep>>
* Event Handlers
* <<majorsep>>
<<CommentBlock>>
* <<minorsep>>
* Handle changes in one of the key fields 
* <<minorsep>>
<<CommentBlock>>
<<UM058_Repeat False ALL>><<split>>EvtRoutine Handling(#<<field>>.Changed) Options(*NOCLEARMESSAGES *NOCLEARERRORS)<<split>>Set #Search_Button Enabled(*SearchOK)<<split>>EndRoutine<<split>><<CommentBlock>>
* <<minorsep>>
* Handle the search button 
* <<minorsep>>
<<CommentBlock>>
EvtRoutine Handling(#Search_Button.Click) Options(*NOCLEARMESSAGES *NOCLEARERRORS)
#Com_Owner.uSelectData
Endroutine
<<commentblock>>
<<if CA_UM109_TERMINATE>>
* <<minorsep>>
* Handle Termination
* <<minorsep>>
Mthroutine Name(uTerminate) Options(*REDEFINE)
<<CommentBlock>>
* <your termination logic goes here>
* <your termination logic goes here>
* <your termination logic goes here>
<<CommentBlock>>
<<Comment>>Do any termination defined in the ancestor
#Com_Ancestor.uTerminate
<<CommentBlock>>
Endroutine
<<endif>>
<<if CA_UM109_LISTEN>>
* <<minorsep>>
* Handle any external requests to update the Instance List  
* <<minorsep>>
EvtRoutine #Com_owner.avEvent WithId(#EventId) WithAInfo1(#AInfo1) WithAInfo2(#AInfo2) WithAInfo3(#AInfo3) WithAInfo4(#AInfo4) WithAInfo5(#AInfo5)  WithNInfo1(#NInfo1) WithNInfo2(#NInfo2) WithNInfo3(#NInfo3) WithNInfo4(#NInfo4) WithNInfo5(#NInfo5)

* put the received values into fields
#vf_elIdn := #EventId.Value

* Map the AInfo and NInfo values passed, into the key fields - <<UM055_BaseFileKeys>>
<<UM055_GenMapKeys>> 
<<if CA_UM109_CHK_CONNECT>>
<<comment>>Check that the connection is still live 
#avFrameworkManager.avCheckConnection ReturnValue(#con_rslt)
If Cond(*conresult)
<<endif>> 
Case #vf_elIDN

when value_is(= Refresh_Instance_List)
* Reload the Instance List

Invoke #Com_Owner.uSelectData

when value_is(= Add_List_Entry)
* Add an entry to the list view

fetch FIELDS(#XG_Ident) FROM_FILE(<<UM055_BaseFile>>) WITH_KEY(<<UM055_BaseFileKeys>>)
if_status *OKAY

* Start an instance list update
#avListManager.BeginListUpdate
<<UM055_AddtoList>>
* Instance list updating has been completed
#avListManager.EndListUpdate

endif

when value_is(= Update_List_Entry)
* Update an entry that already exists in the instance list

fetch FIELDS(#XG_Ident) FROM_FILE(<<UM055_BaseFile>>) WITH_KEY(<<UM055_BaseFileKeys>>)
if_status *OKAY

* Start an instance list update
#avListManager.BeginListUpdate
<<UM055_GenSetVids>>
<<UM055_GenUpdLst>>
* Instance list updating has been completed
#avListManager.EndListUpdate

endif

when value_is(=  Delete_List_Entry)
#avListManager.BeginListUpdate
<<UM055_GenRmvLst>>
#avListManager.EndListUpdate

endcase
<<if CA_UM109_CHK_CONNECT>>
endif
<<endif>> 
Endroutine
<<endif>>

End_Com
</code>  
